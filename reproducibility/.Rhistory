}
print("Mapping...OK!")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.matrix(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
rownames(original_data) = geneid_genename[rownames(original_data)]
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
gene_names = rownames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
original_data
original_data[1:5,1:5]
original_data[-1, 1]
original_data[, 1]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T)
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
rownames(original_data) = geneid_genename[original_data[, 1]]
original_data = as.matrix(original_data[, -1])
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
gene_names = rownames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
rownames(original_data) = geneid_genename[original_data[, 1]]
original_data = as.matrix(original_data[, -1])
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
gene_names = rownames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names = geneid_genename[original_data[, 1]]
for(ii in gene_names[duplicated(gene_names)]){
index = 1
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
gene_names = rownames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
sum(duplicated(gene_names))
gene_names[duplicated(gene_names)]
duplicated(gene_names)
gene_names[duplicated(gene_names)]
gene_names
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 1
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
gene_names = rownames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
gene_names = rownames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
gene_names = rownames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
gene_names = rownames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
print(dim(raw_data))
print("10X_5CL...OK!")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
print(dim(raw_data))
print("10X_5CL...OK!")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(original_data)
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T, sep = " "))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(original_data)
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T, sep = ","))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(original_data)
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T, sep = "\t"))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
original_data[1:5,1:5]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T, sep = ","))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names = colnames(seurat_obj[["RNA"]]@counts)
raw_data = as.matrix(original_data[, cell_names])
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
print(dim(raw_data))
print("10X_5CL...OK!")
load(""D:\github_repositories\DISC\reproducibility\data\10X_5CL\original_data\sincell_with_class_5cl.RData"")
load("D:\github_repositories\DISC\reproducibility\data\10X_5CL\original_data\sincell_with_class_5cl.RData")
load("D:/github_repositories/DISC/reproducibility/data/10X_5CL/original_data/sincell_with_class_5cl.RData")
View(sce_sc_10x_5cl_qc)
View(sc_Celseq2_5cl_p3)
View(sc_Celseq2_5cl_p2)
View(sc_Celseq2_5cl_p1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ","))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
filtered_data = data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ",")
cell_names = colnames(filtered_data)
raw_data = as.matrix(original_data[, cell_names])
print(dim(raw_data))
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
print(dim(raw_data))
print("10X_5CL...OK!")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ","))
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
filtered_data = data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ",")
cell_names = colnames(filtered_data)
raw_data = as.matrix(original_data[, cell_names])
print(dim(raw_data))
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
original_data[1:5, 1:5]
filtered_data[1:5, 1:5]
cell_names
original_data[, cell_names]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ","))# 32895  5001
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
filtered_data = data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ",")
cell_names = colnames(filtered_data)[-1]
raw_data = as.matrix(original_data[, cell_names])
print(dim(raw_data))
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
print(dim(raw_data))
print("10X_5CL...OK!")
