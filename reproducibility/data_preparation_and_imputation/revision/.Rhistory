knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/JURKAT/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/JURKAT"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/JURKAT/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_JURKAT = colnames(seurat_obj[["RNA"]]@counts)
gene_names_JURKAT = rownames(seurat_obj[["RNA"]]@counts)
raw_data_JURKAT = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/JURKAT/raw.loom", t(raw_data_JURKAT))
}else{
raw_data_JURKAT = readh5_loom("./data/JURKAT/raw.loom")
cell_names_JURKAT = colnames(raw_data_JURKAT)
gene_names_JURKAT = rownames(raw_data_JURKAT)
}
raw_data_JURKAT = readh5_loom("D:/github_repositories/DISC/reproducibility/data/JURKAT/raw.loom")
h5ls("D:/github_repositories/DISC/reproducibility/data/JURKAT/raw.loom")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/JURKAT/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/JURKAT"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/JURKAT/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_JURKAT = colnames(seurat_obj[["RNA"]]@counts)
gene_names_JURKAT = rownames(seurat_obj[["RNA"]]@counts)
raw_data_JURKAT = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/JURKAT/raw.loom", t(raw_data_JURKAT))
}else{
raw_data_JURKAT = readh5_loom("./data/JURKAT/raw.loom")
cell_names_JURKAT = colnames(raw_data_JURKAT)
gene_names_JURKAT = rownames(raw_data_JURKAT)
}
print(dim(raw_data_JURKAT))
print("JURKAT...OK!")
if(!file.exists("./data/293T/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/293T"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/293T/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_293T = colnames(seurat_obj[["RNA"]]@counts)
gene_names_293T = rownames(seurat_obj[["RNA"]]@counts)
raw_data_293T = as.matrix(original_data[, cell_names_293T])
save_h5("./data/293T/raw.loom", t(raw_data_293T))
}else{
raw_data_293T = readh5_loom("./data/293T/raw.loom")
cell_names_293T = colnames(raw_data_293T)
gene_names_293T = rownames(raw_data_293T)
}
print(dim(raw_data_293T))
print("293T...OK!")
if(!file.exists("./data/JURKAT_293T/raw.loom")){
gene_names_JURKAT_293T = unique(c(gene_names_JURKAT, gene_names_293T))
raw_data_JURKAT_293T = matrix(0, nrow = length(gene_names_JURKAT_293T), ncol = ncol(raw_data_JURKAT) + ncol(raw_data_293T), dimnames = list(gene_names_JURKAT_293T, c(cell_names_JURKAT, cell_names_293T)))
raw_data_JURKAT_293T[gene_names_JURKAT, cell_names_JURKAT] = raw_data_JURKAT
raw_data_JURKAT_293T[gene_names_293T, cell_names_293T] = raw_data_293T
save_h5("./data/JURKAT_293T/raw.loom", t(raw_data))
}else{
raw_data_JURKAT_293T = readh5_loom("./data/JURKAT_293T/raw.loom")
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/JURKAT/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/JURKAT"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/JURKAT/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_JURKAT = colnames(seurat_obj[["RNA"]]@counts)
gene_names_JURKAT = rownames(seurat_obj[["RNA"]]@counts)
raw_data_JURKAT = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/JURKAT/raw.loom", t(raw_data_JURKAT))
}else{
raw_data_JURKAT = readh5_loom("./data/JURKAT/raw.loom")
cell_names_JURKAT = colnames(raw_data_JURKAT)
gene_names_JURKAT = rownames(raw_data_JURKAT)
}
print(dim(raw_data_JURKAT))
print("JURKAT...OK!")
if(!file.exists("./data/293T/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/293T"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/293T/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_293T = colnames(seurat_obj[["RNA"]]@counts)
gene_names_293T = rownames(seurat_obj[["RNA"]]@counts)
raw_data_293T = as.matrix(original_data[, cell_names_293T])
save_h5("./data/293T/raw.loom", t(raw_data_293T))
}else{
raw_data_293T = readh5_loom("./data/293T/raw.loom")
cell_names_293T = colnames(raw_data_293T)
gene_names_293T = rownames(raw_data_293T)
}
print(dim(raw_data_293T))
print("293T...OK!")
if(!file.exists("./data/JURKAT_293T/raw.loom")){
dir.create("./data/JURKAT_293T", showWarnings = F)
gene_names_JURKAT_293T = unique(c(gene_names_JURKAT, gene_names_293T))
raw_data_JURKAT_293T = matrix(0, nrow = length(gene_names_JURKAT_293T), ncol = ncol(raw_data_JURKAT) + ncol(raw_data_293T), dimnames = list(gene_names_JURKAT_293T, c(cell_names_JURKAT, cell_names_293T)))
raw_data_JURKAT_293T[gene_names_JURKAT, cell_names_JURKAT] = raw_data_JURKAT
raw_data_JURKAT_293T[gene_names_293T, cell_names_293T] = raw_data_293T
save_h5("./data/JURKAT_293T/raw.loom", t(raw_data))
}else{
raw_data_JURKAT_293T = readh5_loom("./data/JURKAT_293T/raw.loom")
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/JURKAT/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/JURKAT"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/JURKAT/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_JURKAT = colnames(seurat_obj[["RNA"]]@counts)
gene_names_JURKAT = rownames(seurat_obj[["RNA"]]@counts)
raw_data_JURKAT = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/JURKAT/raw.loom", t(raw_data_JURKAT))
}else{
raw_data_JURKAT = readh5_loom("./data/JURKAT/raw.loom")
cell_names_JURKAT = colnames(raw_data_JURKAT)
gene_names_JURKAT = rownames(raw_data_JURKAT)
}
print(dim(raw_data_JURKAT))
print("JURKAT...OK!")
if(!file.exists("./data/293T/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/293T"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/293T/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_293T = colnames(seurat_obj[["RNA"]]@counts)
gene_names_293T = rownames(seurat_obj[["RNA"]]@counts)
raw_data_293T = as.matrix(original_data[, cell_names_293T])
save_h5("./data/293T/raw.loom", t(raw_data_293T))
}else{
raw_data_293T = readh5_loom("./data/293T/raw.loom")
cell_names_293T = colnames(raw_data_293T)
gene_names_293T = rownames(raw_data_293T)
}
print(dim(raw_data_293T))
print("293T...OK!")
if(!file.exists("./data/JURKAT_293T/raw.loom")){
dir.create("./data/JURKAT_293T", showWarnings = F)
gene_names_JURKAT_293T = unique(c(gene_names_JURKAT, gene_names_293T))
raw_data_JURKAT_293T = matrix(0, nrow = length(gene_names_JURKAT_293T), ncol = ncol(raw_data_JURKAT) + ncol(raw_data_293T), dimnames = list(gene_names_JURKAT_293T, c(cell_names_JURKAT, cell_names_293T)))
raw_data_JURKAT_293T[gene_names_JURKAT, cell_names_JURKAT] = raw_data_JURKAT
raw_data_JURKAT_293T[gene_names_293T, cell_names_293T] = raw_data_293T
save_h5("./data/JURKAT_293T/raw.loom", t(raw_data_JURKAT_293T))
}else{
raw_data_JURKAT_293T = readh5_loom("./data/JURKAT_293T/raw.loom")
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/JURKAT/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/JURKAT"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/JURKAT/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_JURKAT = colnames(seurat_obj[["RNA"]]@counts)
gene_names_JURKAT = rownames(seurat_obj[["RNA"]]@counts)
raw_data_JURKAT = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/JURKAT/raw.loom", t(raw_data_JURKAT))
}else{
raw_data_JURKAT = readh5_loom("./data/JURKAT/raw.loom")
cell_names_JURKAT = colnames(raw_data_JURKAT)
gene_names_JURKAT = rownames(raw_data_JURKAT)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/JURKAT/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/JURKAT"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/JURKAT/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_JURKAT = colnames(seurat_obj[["RNA"]]@counts)
gene_names_JURKAT = rownames(seurat_obj[["RNA"]]@counts)
raw_data_JURKAT = as.matrix(original_data[, cell_names_JURKAT])
save_h5("./data/JURKAT/raw.loom", t(raw_data_JURKAT))
}else{
raw_data_JURKAT = readh5_loom("./data/JURKAT/raw.loom")
cell_names_JURKAT = colnames(raw_data_JURKAT)
gene_names_JURKAT = rownames(raw_data_JURKAT)
}
print(dim(raw_data_JURKAT))
print("JURKAT...OK!")
if(!file.exists("./data/293T/raw.loom")){
temp <- tempfile()
download.file("http://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz", temp)
exdir = "./data/293T"
untar(temp, exdir = exdir)
unlink(temp)
original_data <- Read10X(data.dir = paste0(exdir, "/filtered_matrices_mex/hg19/"))
save_h5("./data/293T/original.loom", as.matrix(t(original_data)))
seurat_obj <- CreateSeuratObject(counts = as.data.frame(original_data), min.features = 500)
cell_names_293T = colnames(seurat_obj[["RNA"]]@counts)
gene_names_293T = rownames(seurat_obj[["RNA"]]@counts)
raw_data_293T = as.matrix(original_data[, cell_names_293T])
save_h5("./data/293T/raw.loom", t(raw_data_293T))
}else{
raw_data_293T = readh5_loom("./data/293T/raw.loom")
cell_names_293T = colnames(raw_data_293T)
gene_names_293T = rownames(raw_data_293T)
}
print(dim(raw_data_293T))
print("293T...OK!")
if(!file.exists("./data/JURKAT_293T/raw.loom")){
dir.create("./data/JURKAT_293T", showWarnings = F)
gene_names_JURKAT_293T = unique(c(gene_names_JURKAT, gene_names_293T))
raw_data_JURKAT_293T = matrix(0, nrow = length(gene_names_JURKAT_293T), ncol = ncol(raw_data_JURKAT) + ncol(raw_data_293T), dimnames = list(gene_names_JURKAT_293T, c(cell_names_JURKAT, cell_names_293T)))
raw_data_JURKAT_293T[gene_names_JURKAT, cell_names_JURKAT] = raw_data_JURKAT
raw_data_JURKAT_293T[gene_names_293T, cell_names_293T] = raw_data_293T
save_h5("./data/JURKAT_293T/raw.loom", t(raw_data_JURKAT_293T))
}else{
raw_data_JURKAT_293T = readh5_loom("./data/JURKAT_293T/raw.loom")
}
print(dim(raw_data_JURKAT_293T))
print("JURKAT_293T...OK!")
utilities_path = "./source/utilities.r"
source(utilities_path)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ","))# 32895  5001
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
filtered_data = data.table::fread("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T, sep = ",")
cell_names = colnames(filtered_data)[-1]
raw_data = as.matrix(original_data[, cell_names])
print(dim(raw_data))
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
colnames(filtered_data)
filtered_data[1:5, 1:5]
filtered_data = data.table::fread("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = F, sep = ",")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.data.frame(data.table::fread("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ","))# 32895  5001
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[original_data[, 1]]
gene_names = original_data[, 1]
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data[, -1])
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
filtered_data = data.table::fread("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = F, sep = ",")
cell_names = colnames(filtered_data)[-1]
raw_data = as.matrix(original_data[, cell_names])
print(dim(raw_data))
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
filtered_data[1:5, 1:5]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = read.csv("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ","))# 32895  5001
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = read.csv("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ",")# 32895  5001
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[rownames(original_data)]
gene_names = rownames(original_data)
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
original_data = as.matrix(original_data)
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
filtered_data = read.csv("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T)
cell_names = colnames(filtered_data)
raw_data = as.matrix(original_data[, cell_names])
print(dim(raw_data))
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.matrix(read.csv("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ","))# 32895  5001
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[rownames(original_data)]
gene_names = rownames(original_data)
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
filtered_data = read.csv("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T)
cell_names = colnames(filtered_data)
raw_data = as.matrix(original_data[, cell_names])
print(dim(raw_data))
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
original_data[1:5, 1:5]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="D:/github_repositories/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/10X_5CL/raw.loom")){
original_data = as.matrix(read.csv("./data/10X_5CL/original_data/GSM3618014_gene_count.csv.gz", header = T, sep = ",", row.names = T))# 32895  5001
geneid_genename = readRDS("./data/hg19/geneid_genename.rds")
gene_names_candidate = geneid_genename[rownames(original_data)]
gene_names = rownames(original_data)
gene_names[!is.na(gene_names_candidate)] = gene_names_candidate[!is.na(gene_names_candidate)]
for(ii in gene_names[duplicated(gene_names)]){
index = 0
for(jj in which(gene_names == ii)){
gene_names[jj] = paste0(gene_names[jj], "_duplicate_", index)
index = index + 1
}
}
rownames(original_data) = gene_names
print(dim(original_data))
save_h5("./data/10X_5CL/original.loom", t(original_data))
filtered_data = read.csv("./data/10X_5CL/original_data/sc_10x_5cl.count.csv.gz", header = T, row.names = T)
cell_names = colnames(filtered_data)
raw_data = as.matrix(original_data[, cell_names])
print(dim(raw_data))
save_h5("./data/10X_5CL/raw.loom", t(raw_data))
}else{
raw_data = readh5_loom("./data/10X_5CL/raw.loom")
cell_names = colnames(raw_data)
gene_names = rownames(raw_data)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="E:/DISC/reproducibility")
utilities_path = "./source/utilities.r"
source(utilities_path)
if(!file.exists("./data/PBMC_TISSUE/raw.loom")){
original_data_dir = "./data/PBMC_TISSUE/orignial_data"
filelist = list.files(original_data_dir)
filelist = filelist[grepl(".tar.gz", filelist)]
gene_name_list = list()
cell_id_list = list()
cell_type = c()
for(ii in filelist){
print(ii)
exdir = paste0(original_data_dir, "/", sub(".tar.gz", "", ii))
dir.create(exdir, showWarnings = F)
untar(paste0(original_data_dir, "/", ii), exdir = exdir)
gene_id_gene_name = read.table(paste0(exdir, "/filtered_matrices_mex/hg19/genes.tsv"))
gene_name_list[[ii]] = paste0(gene_id_gene_name[, 1],':',gene_id_gene_name[, 2])
this_cell_type = sub("_filtered_gene_bc_matrices.tar.gz", "", ii)
cell_type = c(cell_type, this_cell_type)
cell_id_list[[ii]] = paste0(this_cell_type, ':', readLines(paste0(exdir, "/filtered_matrices_mex/hg19/barcodes.tsv")))
}
gene_name = unique(unlist(gene_name_list))
cell_id = unlist(cell_id_list)
names(cell_type) = cell_id
original_data = Matrix(0, nrow = length(gene_name), ncol = length(cell_id), dimnames = list(gene_name, cell_id), sparse = T)
for(ii in filelist){
print(ii)
this_dgt_mat = readMM(paste0(original_data_dir, "/", sub(".tar.gz", "", ii), "/filtered_matrices_mex/hg19/matrix.mtx"))
rownames(this_dgt_mat) = gene_name_list[[ii]]
original_data[, cell_id_list[[ii]]] = as(this_dgt_mat[gene_name, ], "dgCMatrix")
}
original_data = original_data[rowSums(original_data) > 0, ]
print(dim(original_data))  # [21952, 94655]
save_h5("./data/PBMC_TISSUE/original.loom", as.matrix(t(original_data)))
saveRDS("./data/PBMC_TISSUE/cell_type_original.rds", cell_type)
cell_mask = colSums(original_data> 0) >= 500
raw_data = original_data[cell_mask, ]
raw_cell_type = cell_type[cell_mask]
print(dim(raw_data))  # [21952, 59620]
save_h5("./data/PBMC_TISSUE/raw.loom", as.matrix(t(raw_data)))
saveRDS("./data/PBMC_TISSUE/cell_type_raw.rds", raw_cell_type)
}else{
raw_data = readh5_loom("./data/PBMC_TISSUE/raw.loom")
print(dim(raw_data))
cell_id = colnames(raw_data)
gene_name = rownames(raw_data)
}
cell_type
rep(cell_type, length(cell_id_list[[ii]]))
